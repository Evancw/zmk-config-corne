#line 4 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku.dtsi"
#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#line 14 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku.dtsi"
#include <dt-bindings/zmk/pointing.h>

/ {
  keymap {
    compatible = "zmk,keymap";





BASE { display-name = "Base"; bindings = < &none  &kp Q  &kp W  &kp F  &kp P  &kp G       &kp J  &kp L  &kp U  &kp Y  &kp SQT  &none &none  &u_mt LGUI A  &u_mt LALT R  &u_mt LCTRL S  &u_mt LSHFT T  &kp D       &kp H  &u_mt LSHFT N  &u_mt LCTRL E  &u_mt LALT I  &u_mt LGUI O  &none &none  &u_lt 3 Z  &u_mt RALT X  &kp C  &kp V  &kp B       &kp K  &kp M  &kp COMMA  &u_mt RALT DOT  &u_lt 3 SLASH  &none &u_lt 6 ESC  &u_lt 4 SPACE  &u_lt 5 TAB       &u_lt 8 RET  &u_lt 7 BSPC  &u_lt 9 DEL >; }; EXTRA { display-name = "Extra"; bindings = < &none  &kp Q  &kp W  &kp E  &kp R  &kp T       &kp Y  &kp U  &kp I  &kp O  &kp P  &none &none  &u_mt LGUI A  &u_mt LALT S  &u_mt LCTRL D  &u_mt LSHFT F  &kp G       &kp H  &u_mt LSHFT J  &u_mt LCTRL K  &u_mt LALT L  &u_mt LGUI SQT  &none &none  &u_lt 3 Z  &u_mt RALT X  &kp C  &kp V  &kp B       &kp N  &kp M  &kp COMMA  &u_mt RALT DOT  &u_lt 3 SLASH  &none &u_lt 6 ESC  &u_lt 4 SPACE  &u_lt 5 TAB       &u_lt 8 RET  &u_lt 7 BSPC  &u_lt 9 DEL >; }; TAP { display-name = "Tap"; bindings = < &none  &kp Q  &kp W  &kp F  &kp P  &kp B       &kp J  &kp L  &kp U  &kp Y  &kp SQT  &none &none  &kp A  &kp R  &kp S  &kp T  &kp G       &kp M  &kp N  &kp E  &kp I  &kp O  &none &none  &kp Z  &kp X  &kp C  &kp D  &kp V       &kp K  &kp H  &kp COMMA  &kp DOT  &kp SLASH  &none &kp ESC  &kp SPACE  &kp TAB       &kp RET  &kp BSPC  &kp DEL >; }; BUTTON { display-name = "Button"; bindings = < &none  &kp K_UNDO  &kp LS(DEL)  &kp LC(INS)  &kp LS(INS)  &kp K_AGAIN       &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none &none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none       &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none &none  &kp K_UNDO  &kp LS(DEL)  &kp LC(INS)  &kp LS(INS)  &kp K_AGAIN       &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none &mkp MB3  &mkp MB1  &mkp MB2       &mkp MB2  &mkp MB1  &mkp MB3 >; }; NAV { display-name = "Nav"; bindings = < &none  &bootloader  &u_to_U_TAP  &u_to_U_EXTRA  &u_to_U_BASE  &none       &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none &none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none       &u_caps_word  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none &none  &none  &kp RALT  &u_to_U_NUM  &u_to_U_NAV  &none       &kp INS  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END  &none &none  &none  &none       &kp RET  &kp BSPC  &kp DEL >; }; MOUSE { display-name = "Mouse"; bindings = < &none  &bootloader  &u_to_U_TAP  &u_to_U_EXTRA  &u_to_U_BASE  &none       &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none &none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none       &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none &none  &none  &kp RALT  &u_to_U_SYM  &u_to_U_MOUSE  &none       &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none &none  &none  &none       &mkp MB2  &mkp MB1  &mkp MB3 >; }; MEDIA { display-name = "Media"; bindings = < &none  &bootloader  &u_to_U_TAP  &u_to_U_EXTRA  &u_to_U_BASE  &none       &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &none &none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none       &ext_power EP_TOG  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none &none  &none  &kp RALT  &u_to_U_FUN  &u_to_U_MEDIA  &none       &u_out_tog  &u_bt_sel_0  &u_bt_sel_1  &u_bt_sel_2  &u_bt_sel_3  &none &none  &none  &none       &kp C_STOP  &kp C_PP  &kp C_MUTE >; }; NUM { display-name = "Num"; bindings = < &none  &kp LBKT  &kp N7  &kp N8  &kp N9  &kp RBKT       &none  &u_to_U_BASE  &u_to_U_EXTRA  &u_to_U_TAP  &bootloader  &none &none  &kp SEMI  &kp N4  &kp N5  &kp N6  &kp EQUAL       &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none &none  &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH       &none  &u_to_U_NUM  &u_to_U_NAV  &kp RALT  &none  &none &kp DOT  &kp N0  &kp MINUS       &none  &none  &none >; }; SYM { display-name = "Sym"; bindings = < &none  &kp LBRC  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RBRC       &none  &u_to_U_BASE  &u_to_U_EXTRA  &u_to_U_TAP  &bootloader  &none &none  &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS       &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none &none  &kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp PIPE       &none  &u_to_U_SYM  &u_to_U_MOUSE  &kp RALT  &none  &none &kp LPAR  &kp RPAR  &kp UNDER       &none  &none  &none >; }; FUN { display-name = "Fun"; bindings = < &none  &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN       &none  &u_to_U_BASE  &u_to_U_EXTRA  &u_to_U_TAP  &bootloader  &none &none  &kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK       &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none &none  &kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK       &none  &u_to_U_FUN  &u_to_U_MEDIA  &kp RALT  &none  &none &kp K_APP  &kp SPACE  &kp TAB       &none  &none  &none >; };

<<<<<<< HEAD
  };
};
#line 20 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku_shift_functions.dtsi"
/ { macros { u_macro_u_bt_sel_0: u_macro_u_bt_sel_0 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <0>; bindings = <&bt BT_SEL 0 &bt BT_CLR>; }; }; }; / { behaviors { u_bt_sel_0: u_bt_sel_0 { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_SEL 0>, <&u_macro_u_bt_sel_0>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };
/ { macros { u_macro_u_bt_sel_1: u_macro_u_bt_sel_1 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <0>; bindings = <&bt BT_SEL 1 &bt BT_CLR>; }; }; }; / { behaviors { u_bt_sel_1: u_bt_sel_1 { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_SEL 1>, <&u_macro_u_bt_sel_1>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };
/ { macros { u_macro_u_bt_sel_2: u_macro_u_bt_sel_2 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <0>; bindings = <&bt BT_SEL 2 &bt BT_CLR>; }; }; }; / { behaviors { u_bt_sel_2: u_bt_sel_2 { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_SEL 2>, <&u_macro_u_bt_sel_2>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };
/ { macros { u_macro_u_bt_sel_3: u_macro_u_bt_sel_3 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <0>; bindings = <&bt BT_SEL 3 &bt BT_CLR>; }; }; }; / { behaviors { u_bt_sel_3: u_bt_sel_3 { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_SEL 3>, <&u_macro_u_bt_sel_3>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };
/ { macros { u_macro_u_bt_sel_4: u_macro_u_bt_sel_4 { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <0>; bindings = <&bt BT_SEL 4 &bt BT_CLR>; }; }; }; / { behaviors { u_bt_sel_4: u_bt_sel_4 { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_SEL 4>, <&u_macro_u_bt_sel_4>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };

/ { behaviors { u_out_tog: u_out_tog { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&out OUT_TOG>, <&out OUT_USB>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };

/ { behaviors { u_caps_word: u_caps_word { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&caps_word>, <&kp CAPS>; mods = <(MOD_LSFT|MOD_RSFT)>; }; }; };
#line 18 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku_double_tap_guard.dtsi"
/ { behaviors { u_to_U_BASE: u_to_U_BASE { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 0>; }; }; }; / { behaviors { u_to_U_EXTRA: u_to_U_EXTRA { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 1>; }; }; }; / { behaviors { u_to_U_TAP: u_to_U_TAP { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 2>; }; }; }; / { behaviors { u_to_U_BUTTON: u_to_U_BUTTON { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 3>; }; }; }; / { behaviors { u_to_U_NAV: u_to_U_NAV { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 4>; }; }; }; / { behaviors { u_to_U_MOUSE: u_to_U_MOUSE { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 5>; }; }; }; / { behaviors { u_to_U_MEDIA: u_to_U_MEDIA { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 6>; }; }; }; / { behaviors { u_to_U_NUM: u_to_U_NUM { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 7>; }; }; }; / { behaviors { u_to_U_SYM: u_to_U_SYM { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 8>; }; }; }; / { behaviors { u_to_U_FUN: u_to_U_FUN { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; tapping-term-ms = <200>; bindings = <&none>, <&to 9>; }; }; };
#line 4 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku_mousekeys.dtsi"
&mmv {
  acceleration-exponent = <1>;
  time-to-max-speed-ms = <1500>;
  delay-ms = <0>;
};
#line 4 "/Users/evanwhitmer/Documents/Git_stuff/miryoku_zmk/miryoku/miryoku_behaviors.dtsi"
/ {
  behaviors {
    u_mt: u_mt {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    u_lt: u_lt {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
    };
  };
=======
        up_pgup: up_pgup {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_PGUP";
            bindings = <&kp UP>, <&kp PAGE_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        down_pgdn: down_pgdn {
            compatible = "zmk,behavior-mod-morph";
            label = "DOWN_PGDN";
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        left_home: left_home {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_HOME";
            bindings = <&kp LEFT>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        right_end: right_end {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_END";
            bindings = <&kp RIGHT>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
            timeout-ms = <30>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
            timeout-ms = <30>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
            timeout-ms = <30>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
            timeout-ms = <30>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
            timeout-ms = <30>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
            timeout-ms = <30>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
            timeout-ms = <30>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
            timeout-ms = <30>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
            timeout-ms = <30>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
            timeout-ms = <30>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
            timeout-ms = <30>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
            timeout-ms = <30>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
            timeout-ms = <30>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
            timeout-ms = <30>;
        };

        exclaim {
            bindings = <&kp EXCL>;
            key-positions = <1 13>;
            timeout-ms = <30>;
        };

        carot {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            timeout-ms = <30>;
        };

        ampersand {
            bindings = <&kp AMPS>;
            key-positions = <7 19>;
            timeout-ms = <30>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB        &kp Q  &kp W  &kp F     &kp P  &kp G        &kp J       &kp L  &kp U         &kp Y    &kp SEMICOLON  &kp ESC
&kp BACKSPACE  &kp A  &kp R  &kp S     &kp T  &kp D        &kp H       &kp N  &kp E         &kp I    &kp O          &kp SQT
&kp LCTRL      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp K       &kp M  &kp COMMA     &kp DOT  &kp FSLH       &kp RET
                             &kp LGUI  &mo 2  &kp SPACE    &kp LSHIFT  &mo 1  &kp LEFT_ALT
            >;
        };

        NAV {
            display-name = "NavNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp GRAVE   &trans            &kp LC(LS(TAB))  &up_pgup    &kp LC(TAB)  &trans    &trans  &trans   &kp N7  &kp N8  &kp N9  &kp BACKSPACE
&kp DELETE  &none             &left_home       &down_pgdn  &right_end   &none     &trans  &trans   &kp N4  &kp N5  &kp N6  &kp N0
&trans      &kp LS(LEFT_GUI)  &trans           &trans      &trans       &none     &trans  &kp DOT  &kp N1  &kp N2  &kp N3  &trans
                                               &trans      &trans       &trans    &trans  &trans   &trans
            >;
        };

        SYM {
            display-name = "Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE   &trans            &kp LC(LS(TAB))  &up_pgup    &kp LC(TAB)  &trans    &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RPAR  &trans
&kp DELETE  &trans            &left_home       &down_pgdn  &right_end   &trans    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT              &kp BSLH  &trans
&trans      &kp LS(LEFT_GUI)  &trans           &trans      &trans       &trans    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC              &kp PIPE  &trans
                                               &trans      &trans       &trans    &trans     &trans     &trans
            >;
        };

        ADJ {
            display-name = "System";
            bindings = <
&trans        &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &kp LC(LA(DELETE))
&trans        &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans       &trans
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &bootloader  &trans
                                          &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
>>>>>>> b6a48fa6cf5ba7f9b9a041ab2a7c656102a46090
};
